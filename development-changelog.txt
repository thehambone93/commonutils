*** commonutils Development Changelog
*** Written by: Wes Hampson
*** Started: 31 August 2014
===============================================================================
     Version: 0.3.0
     Started: 12 September 2014
    Built by: Wes Hampson
  Build date: 07 October 2014
Build number: 134
Changes made: -Updated class: "jar.JarProperties" - accommodate changes made to
               the config file that it accesses.
              -Updated class: "gui.bugreport.BugReport" - accommoate changes
               made to the config file that it accesses.
              -Updated class: "logging.Logger" - removed the "Level" enum and
               moved it to its own class.
              -Added class: "logging.Level" - Defines logging levels to be used
               with the "logging.Logger" class.
              -Added class: "jar.JarUtils" - will contain various operations
               related to Jar files. Currently contains a function for
               extracting Jar resources to files.
              -Added class: "updater.UpdateInstaller" - meant to be called as a
               standalone class file. Used for installing updates.
              -Added class: "jvm.JVMBuilder" - used for invoking new JVM
               instances.
              -Added class: "updater.UpdaterSettingsPanel" - a JPanel used for
               modifying the updater configuration.
===============================================================================
     Version: 0.2.0
     Started: 5 September 2014
    Built by: Wes Hampson
  Build date: 6 September 2014
Build number: 98
Changes made: -Removed code from "logging.Logger" class that would print
               strange characters if color was enabled in the default
               Logger.
              -Added class: "logging.ANSILogger" - used in place of the default
               logger when colored output to the console is desired.
              -Added class: "exception.UncaughtExceptionHandler" - used to
               catch previously uncaught exceptions. May call an instance of
               "gui.exception.UncaughtExceptionDialog".
              -Added class: "gui.exception.UncaughtExceptionDialog" - a dialog
               window that shows information about an uncaught exception to the
               user.
              -Added class: "jar.JarProperties" - gets properties such as
               version number and build date from a properties file located in
               the META-INF directory.
===============================================================================
     Version: 0.1.0
     Started: 25 August 2014
    Built by: Wes Hampson
  Build date: 31 August 2014
Build number: 59
Changes made: -Started writing a library containing classes and functions that
               I commonly use.
              -Added class: "ansi.ANSI" - handles operations related to ANSI
               colors, such as converting from RGB to the nearest ANSI color
               and providing a list of ANSI escape sequences for ANSI colors
               with a black background.
              -Added class: "ansi.ANSIException" - used for any ANSI-related
               errors.
              -Added class: "email.Email" - used for sending emails using
               SMTP. Also contains a list of common email providers and their
               respective SMTP server address and port.
              -Added class: "gui.bugreport.BugReporter" - front-end for the
               Email class so users can send me bug reports or feedback.
              -Added class: "io.DocumentOutputStream" - an OutputStream for
               writing to "javax.swing.text.Document" objects.
              -Added class: "logging.Logger" - abstract class used for logging
               information. Can write to stdout, a file, or a Document using
               the "DocumentOutputStream".
              -Added class: "logging.JLineLogger" - implementation of the
               "Logger" class that is meant to work with the
               "jline.console.ConsoleReader" class. It allows for uninterrupted
               typing in the console while information is being outputted to
               the console.
              -Added class: "logging.Timestamp" - essentially a shortcut for
               "java.text.SimpleDateFormat". Returns the current time in the
               specified format.
              -Added class: "xml.XMLReader" - reads a file or inputstream and
               parses it as an XML file using dom4j's "org.dom4j.io.SAXReader"
               class. Returns an "org.dom4j.Document" object.
              -Added class: "xml.XMLWritable" - an interface that will be used
               to denote whether or not an object can be written to an XML
               file. Classes that implement this interface must define the
               "getXMLData()" method, which will tell the "XMLWriter" (which
               has yet to be written) how to save the object.
===============================================================================