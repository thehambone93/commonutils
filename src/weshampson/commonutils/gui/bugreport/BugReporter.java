/*
 * Copyright (C) 2014 Wes Hampson.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */

package weshampson.commonutils.gui.bugreport;

import java.awt.Desktop;
import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Iterator;
import javax.mail.MessagingException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import weshampson.commonutils.email.Email;
import weshampson.commonutils.logging.Level;
import weshampson.commonutils.logging.Logger;
import weshampson.commonutils.xml.XMLReader;

/**
 *
 * @author  Wes Hampson
 * @version 0.3.0 (Sep 20, 2014)
 * @since   0.1.0 (Aug 29, 2014)
 */
public class BugReporter extends javax.swing.JFrame {
    private static final String CONFIG_FILE = "META-INF/bugReporterConfig.xml";
    private String recipientAddress;
    /** Creates new form BugReporter */
    public BugReporter() {
        initComponents();
        initDocumentListeners();
        initProviderComboBox();
        getRecipientAddress();
    }
    private void initDocumentListeners() {
        DocumentListener documentListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                update();
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                update();
            }
            @Override
            public void changedUpdate(DocumentEvent e) {
                update();
            }
            private void update() {
                if (!emaiUsernameTextField.getText().isEmpty() && emailPasswordField.getPassword().length != 0 && !emailSubjectTextField.getText().isEmpty() && !emailBodyTextArea.getText().isEmpty()) {
                    submitButton.setEnabled(true);
                } else {
                    submitButton.setEnabled(false);
                }
            }
        };
        emaiUsernameTextField.getDocument().addDocumentListener(documentListener);
        emailPasswordField.getDocument().addDocumentListener(documentListener);
        emailSubjectTextField.getDocument().addDocumentListener(documentListener);
        emailBodyTextArea.getDocument().addDocumentListener(documentListener);
    }
    private void initProviderComboBox() {
        DefaultComboBoxModel<Email.EmailProvider> emailProviderComboBoxModel = new DefaultComboBoxModel<>();
        for (Email.EmailProvider provider : Email.EmailProvider.values()) {
            emailProviderComboBoxModel.addElement(provider);
        }
        emailProviderComboBox.setModel(emailProviderComboBoxModel);
    }
    private void getRecipientAddress() {
        try {
            InputStream inputStream = this.getClass().getClassLoader().getResourceAsStream(CONFIG_FILE);
            Document doc = XMLReader.read(inputStream);
            Element rootElement = doc.getRootElement();
            for (Iterator i = rootElement.elementIterator(); i.hasNext();) {
                Element e = (Element)i.next();
                if (e.getName().equals("mailTo")) {
                    recipientAddress = e.getText();
                    jLabel1.setText("<html><a href='mailto:" + recipientAddress + "'>" + recipientAddress);
                }
            }
        } catch (IOException ex) {
            Logger.log(Level.ERROR, ex, null);
        } catch (DocumentException ex) {
            Logger.log(Level.ERROR, ex, null);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        emailAddressLabel = new javax.swing.JLabel();
        emaiUsernameTextField = new javax.swing.JTextField();
        emailProviderComboBox = new javax.swing.JComboBox<Email.EmailProvider>();
        emailPasswordLabel = new javax.swing.JLabel();
        emailPasswordField = new javax.swing.JPasswordField();
        separator = new javax.swing.JSeparator();
        emailSubjectLabel = new javax.swing.JLabel();
        emailSubjectTextField = new javax.swing.JTextField();
        emailBodyLabel = new javax.swing.JLabel();
        emailBodyScrollPane = new javax.swing.JScrollPane();
        emailBodyTextArea = new javax.swing.JTextArea();
        submitButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bug Reporter");
        setResizable(false);

        emailAddressLabel.setText("Email address:");

        emailPasswordLabel.setText("Password");

        emailSubjectLabel.setText("Subject:");

        emailBodyLabel.setText("Message body:");

        emailBodyTextArea.setColumns(20);
        emailBodyTextArea.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        emailBodyTextArea.setRows(5);
        emailBodyScrollPane.setViewportView(emailBodyTextArea);

        submitButton.setText("Submit");
        submitButton.setEnabled(false);
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("mailto:<address>");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setText("If you encounter a problem, or simply want to send me feedback, use this feature to");

        jLabel3.setText("Alternatively, you can email me at:");

        jLabel4.setText("send me an email.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(emailBodyScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailPasswordLabel)
                            .addComponent(emailAddressLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emaiUsernameTextField)
                            .addComponent(emailPasswordField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(emailProviderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(separator)
                    .addComponent(emailSubjectTextField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(submitButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailSubjectLabel)
                            .addComponent(emailBodyLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailAddressLabel)
                    .addComponent(emaiUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailProviderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailPasswordLabel)
                    .addComponent(emailPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailSubjectLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailSubjectTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailBodyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailBodyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        Email.EmailProvider emailProvider = (Email.EmailProvider)emailProviderComboBox.getSelectedItem();
        String emailUsername = emaiUsernameTextField.getText() + emailProvider;
        String emailPassword = new String(emailPasswordField.getPassword());
        String emailSubject = emailSubjectTextField.getText();
        String emailText = emailBodyTextArea.getText();
        try {
            Email.sendEmail(emailProvider, recipientAddress, emailUsername, emailPassword, emailSubject, emailText);
        } catch (MessagingException ex) {
            Logger.log(Level.ERROR, ex, null);
            JOptionPane.showMessageDialog(this, "<html><p style='width: 200px;'>" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        try {
            Desktop.getDesktop().mail(new URI("mailto:" + recipientAddress));
            Logger.log(Level.INFO, "Mailto:" + recipientAddress + " clicked.");
        } catch (URISyntaxException ex) {
            Logger.log(Level.ERROR, ex, null);
        } catch (IOException ex) {
            Logger.log(Level.ERROR, ex, null);
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField emaiUsernameTextField;
    private javax.swing.JLabel emailAddressLabel;
    private javax.swing.JLabel emailBodyLabel;
    private javax.swing.JScrollPane emailBodyScrollPane;
    private javax.swing.JTextArea emailBodyTextArea;
    private javax.swing.JPasswordField emailPasswordField;
    private javax.swing.JLabel emailPasswordLabel;
    private javax.swing.JComboBox<Email.EmailProvider> emailProviderComboBox;
    private javax.swing.JLabel emailSubjectLabel;
    private javax.swing.JTextField emailSubjectTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator separator;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}